__ASTREE_import(());

int rand;
__ASTREE_volatile_input((rand));


int ev3_sensor_init_stub( void )
{
	int result;
	__ASTREE_modify((result; [0,256]));
	return result;
}


int ev3_tacho_init_stub( void )
{

	INX_T inx;
	uint8_t port;
	uint8_t extport;
	
	__ASTREE_modify((inx, port, extport));
	__ASTREE_known_fact((port == 0||port==65||port==66||port==67||port==68));
	__ASTREE_known_fact((extport == 0||extport==65||extport==66||extport==67||extport==68));
 	memset( ev3_tacho, 0, sizeof( ev3_tacho ));

 	if ( rand) return ( -1 );
	int i = 0;
	for(i=0;i<64;++i)
	{
		if(rand) return i;
		ev3_tacho[i].type_inx = inx;
		ev3_tacho[i].port = port;
		ev3_tacho[i].extport = extport;
	}
 	return ( i );
}

size_t get_port_address_stub( uint8_t sn, char *buf, size_t sz )
{
	__ASTREE_trash((buf, sz));
	buf[sz-1] = '\0';
	size_t result;
	__ASTREE_modify((result));
	__ASTREE_known_fact((result<=sz));
	return result;
}